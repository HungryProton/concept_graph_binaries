name: Server Build

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number, used for the release name'
        default: ''
        required: true

jobs:
  create_linux_builds:
    name: Create Linux Headless Build
    runs-on: ubuntu-18.04

    steps:
    - name: Clone Godot
      uses: actions/checkout@v2
      with:
        repository: godotengine/godot
        ref: 3.2
        path: godot
    
    - name: Clone GLTF module
      uses: actions/checkout@v2
      with:
        repository: godot-extended-libraries/gltf
        ref: master
        path: godot/modules/gltf

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
    - name: Make apt sources.list use the default Ubuntu repositories
      run: |
        sudo cp -f godot/misc/ci/sources.list /etc/apt/sources.list
        sudo apt-get update
          
    - name: Install dependencies
      run: |
        sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: Configuring Python packages
      run: |
        python -c "import sys; print(sys.version)"
        python -m pip install scons
        python --version
        scons --version

    - name: Compile Headless Engine
      run: |
        cd godot
        scons -j2 platform=server tools=yes target=release_debug
        strip bin/godot_server.x11.opt.tools.64
        
    - name: Create a Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: ${{ github.ref }}
          release_name: Server builds ${{ github.event.inputs.version }}
          body: ''
          draft: true
          prerelease: true

    - name: Upload Server build
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: godot/bin/godot_server.x11.opt.tools.64
        asset_name: godot_server.x11.tools.64
        asset_content_type: application/octet-stream
     
